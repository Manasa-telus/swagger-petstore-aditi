name: CodeQL Scan and Merge

on:
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened ]

jobs:
  codeql_scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write  # Needed for CodeQL

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      # Step 3: Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  merge_pr:
    needs: codeql_scan
    if: ${{ github.event.pull_request.head.ref == 'dynamic-vars-tasks' && success() }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Merge the Pull Request
      - name: Merge Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            if (pr.data.mergeable_state === 'clean') {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.data.number,
                merge_method: 'merge'  // You can use 'squash' or 'rebase' if preferred
              });
              console.log('PR merged successfully.');
            } else {
              console.log('PR is not mergeable.');
              process.exit(1);
            }
