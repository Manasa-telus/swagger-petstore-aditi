name: Dynamic Vars Tasks Workflow

# Trigger the workflow manually
on:
  workflow_dispatch:
    inputs:
      SNAPSHOT_VERSION:
        description: 'Enter the SNAPSHOT build version (e.g., 1.0.0-SNAPSHOT)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # Ensure you fetch all branches and history
          fetch-depth: 0

      # Step 2: Set up Git configuration
      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Step 3: Create and switch to the new branch
      - name: Create New Branch
        run: |
          git checkout -b dynamic-vars-tasks

      # Step 4: Update POM.xml with the new SNAPSHOT version
      - name: Update POM.xml Version
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.SNAPSHOT_VERSION }} -DgenerateBackupPoms=false
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=$HOME/.m2/repository"

      # Optional: Verify the POM.xml has been updated (for debugging)
      - name: Verify POM.xml Update
        run: |
          grep "<version>${{ github.event.inputs.SNAPSHOT_VERSION }}</version>" pom.xml

      # Step 5: Commit the changes
      - name: Commit Changes
        run: |
          git add pom.xml
          git commit -m "Update POM.xml to version ${{ github.event.inputs.SNAPSHOT_VERSION }}"

      # Step 6: Push the new branch to the repository
      - name: Push Branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: dynamic-vars-tasks

      # Step 7: Perform Maven Build
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install
